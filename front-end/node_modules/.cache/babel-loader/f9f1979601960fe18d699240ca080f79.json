{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/Projects/Personal-projects/todo-mvc/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport List from './components/List';\nimport React, { useState, useEffect } from 'react';\nimport Todo from './components/Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]); // Run this sideEffect on mount \n\n  useEffect(() => {\n    // console.log('test');\n    filterHandler();\n  }, [todos, status]); //Run only once when the component is rendered)\n\n  const filterHandler = () => {\n    switch (status) {\n      //? Filter out the compelted todos\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true)); // ? Break\n\n        break;\n      //? Create another switch statement for 'uncompleted' and 'completeed'\n\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.uncompleted === false));\n        break;\n      //? Default Case\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      setInput: setInput,\n      setTodos: setTodos,\n      todos: todos,\n      input: input,\n      setStatus: setStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      todos: todos,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"lX7hasomg8Tobcj9yIz1+aZNJZs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/jack/Desktop/Projects/Personal-projects/todo-mvc/src/App.js"],"names":["TodoForm","List","React","useState","useEffect","Todo","App","input","setInput","todos","setTodos","status","setStatus","filteredTodos","setFilteredTodos","filterHandler","filter","todo","completed","uncompleted"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD,CAJa,CAMf;;AACAC,EAAAA,SAAS,CAAC,MAAM;AAChB;AACAW,IAAAA,aAAa;AACZ,GAHQ,EAGN,CAACN,KAAD,EAAOE,MAAP,CAHM,CAAT,CAPe,CAUI;;AAOnB,QAAMI,aAAa,GAAG,MAAM;AAC5B,YAAOJ,MAAP;AACE;AACA,WAAI,WAAJ;AACAG,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAAxC,CAAD,CAAhB,CADA,CAEA;;AACA;AACF;;AACA,WAAK,aAAL;AACAJ,QAAAA,gBAAgB,CAACL,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACE,WAAL,KAAqB,KAA1C,CAAD,CAAhB;AACA;AACA;;AACA;AACAL,QAAAA,gBAAgB,CAACL,KAAD,CAAhB;AACA;AAbA;AAiBC,GAlBD;;AAmBE,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAIJ,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAED,QAApB;AAA8B,MAAA,QAAQ,EAAEE,QAAxC;AAAkD,MAAA,KAAK,EAAED,KAAzD;AAAgE,MAAA,KAAK,EAAEF,KAAvE;AAA8E,MAAA,SAAS,EAAEK;AAAzF;AAAA;AAAA;AAAA;AAAA,YAJI,eAKJ,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,KAAb;AAAoB,MAAA,QAAQ,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,YALI;AAAA,kBADF;AASD;;GA7CQJ,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport List from './components/List';\nimport React, {useState, useEffect} from 'react';\nimport Todo from './components/Todo'\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n// Run this sideEffect on mount \nuseEffect(() => {\n// console.log('test');\nfilterHandler();\n}, [todos,status]) //Run only once when the component is rendered)\n\n\n\n\n\n\nconst filterHandler = () => {\nswitch(status) {\n  //? Filter out the compelted todos\n  case'completed':\n  setFilteredTodos(todos.filter(todo => todo.completed === true));\n  // ? Break\n  break;\n//? Create another switch statement for 'uncompleted' and 'completeed'\ncase 'uncompleted':\nsetFilteredTodos(todos.filter(todo => todo.uncompleted === false));\nbreak;\n//? Default Case\ndefault: \nsetFilteredTodos(todos);\nbreak;\n\n}\n\n}\n  return (\n    <>\n    <h1>Todo App\n    </h1>\n    {/* Setting the prop values */}\n<TodoForm setInput={setInput} setTodos={setTodos} todos={todos} input={input} setStatus={setStatus}/>\n<List todos={todos} setTodos={setTodos}/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}