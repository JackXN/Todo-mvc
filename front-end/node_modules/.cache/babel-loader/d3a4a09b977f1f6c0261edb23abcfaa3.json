{"ast":null,"code":"var _jsxFileName = \"/Users/jack/Desktop/Projects/Personal-projects/todo-mvc/src/components/TodoForm.js\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport \"./Styling/TodoForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm({\n  setInput,\n  todos,\n  setTodos,\n  input,\n  setStatus\n}) {\n  //HANDLER FUNCTIONS\n  const handleChange = e => {\n    //? Allowes me to change the value of the input\n    setInput(e.target.value);\n    setInput(e.target.value); // console.log(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    //? prevents browser reload on form submit\n    e.preventDefault(); //Creates the objects with the required properties\n\n    setTodos([...todos, {\n      text: input,\n      completed: false,\n      id: Math.random() * 1000\n    }]); //Clear the input once the form has been submitted\n\n    setInput(\"\");\n  }; // const handleSubmitOnEnter = e => {\n  //     // if keystroke is 13 (enter) => run the handleSubmit function\n  //     if(e.keyCode === 13) {\n  //         handleSubmit()  }\n  //     }\n\n\n  const statusHandler = e => {\n    console.log(e.target.value); //Set the state of the value of the select box\n\n    setStatus(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"todo-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"...\",\n          name: \"text\",\n          className: \"todo-input\",\n          onChange: handleChange,\n          onSubmit: handleSubmit,\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: statusHandler,\n          name: \"todos\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"completed\",\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/jack/Desktop/Projects/Personal-projects/todo-mvc/src/components/TodoForm.js"],"names":["React","useState","TodoForm","setInput","todos","setTodos","input","setStatus","handleChange","e","target","value","handleSubmit","preventDefault","text","completed","id","Math","random","statusHandler","console","log"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,KAA7B;AAAoCC,EAAAA;AAApC,CAAlB,EAAmE;AACjE;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1B;AACAN,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACAR,IAAAA,QAAQ,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,CAH0B,CAI1B;AACD,GALD;;AAOA,QAAMC,YAAY,GAAIH,CAAD,IAAO;AAC1B;AACAA,IAAAA,CAAC,CAACI,cAAF,GAF0B,CAG1B;;AACAR,IAAAA,QAAQ,CAAC,CACP,GAAGD,KADI,EAEP;AAAEU,MAAAA,IAAI,EAAER,KAAR;AAAeS,MAAAA,SAAS,EAAE,KAA1B;AAAiCC,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,KAAgB;AAArD,KAFO,CAAD,CAAR,CAJ0B,CAS1B;;AACAf,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GAXD,CATiE,CAqBjE;AACA;AACA;AACA;AACA;;;AAEA,QAAMgB,aAAa,GAAIV,CAAD,IAAO;AAC3BW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,CAAC,CAACC,MAAF,CAASC,KAArB,EAD2B,CAE3B;;AACAJ,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAEC,YAAtC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,KAFd;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,SAAS,EAAC,YAJZ;AAKE,UAAA,QAAQ,EAAEJ,YALZ;AAME,UAAA,QAAQ,EAAEI,YANZ;AAOE,UAAA,KAAK,EAAEN;AAPT;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,QAAQ,EAAEa,aAAlB;AAAiC,UAAA,IAAI,EAAC,OAAtC;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;KAvDQjB,Q;AAyDT,eAAeA,QAAf","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\nimport React, { useState } from \"react\";\nimport \"./Styling/TodoForm.css\";\n\nfunction TodoForm({ setInput, todos, setTodos, input, setStatus }) {\n  //HANDLER FUNCTIONS\n  const handleChange = (e) => {\n    //? Allowes me to change the value of the input\n    setInput(e.target.value);\n    setInput(e.target.value);\n    // console.log(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    //? prevents browser reload on form submit\n    e.preventDefault();\n    //Creates the objects with the required properties\n    setTodos([\n      ...todos,\n      { text: input, completed: false, id: Math.random() * 1000 },\n    ]);\n\n    //Clear the input once the form has been submitted\n    setInput(\"\");\n  };\n  // const handleSubmitOnEnter = e => {\n  //     // if keystroke is 13 (enter) => run the handleSubmit function\n  //     if(e.keyCode === 13) {\n  //         handleSubmit()  }\n  //     }\n\n  const statusHandler = (e) => {\n    console.log(e.target.value);\n    //Set the state of the value of the select box\n    setStatus(e.target.value);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form-container\">\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"...\"\n            name=\"text\"\n            className=\"todo-input\"\n            onChange={handleChange}\n            onSubmit={handleSubmit}\n            value={input}\n          ></input>\n          <select onChange={statusHandler} name=\"todos\">\n            <option value=\"all\">All</option>\n            <option value=\"completed\">Completed</option>\n            <option value=\"active\">Active</option>\n          </select>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}